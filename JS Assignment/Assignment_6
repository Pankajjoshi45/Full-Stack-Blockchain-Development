1) Perform the following operations to provide the implementation for a
Rectangle class. The operations are:
1. Add an area() method to the Rectangle class.
2. Create a Square class that satisfies the following conditions:
○ It is a subclass of Rectangle.
○ It contains a constructor and no other methods.
○ It can use the Rectangle class' area method to print the area
of a Square object.


class Rectangle {
  constructor(width, height) {
    this.width = width;
    this.height = height;
  }

  area() {
    return this.width * this.height;
  }
}

class Square extends Rectangle {
  constructor(sideLength) {
    super(sideLength, sideLength);
  }
}

const rectangle = new Rectangle(4, 6);
console.log("Rectangle Area:", rectangle.area()); 

const square = new Square(5);
console.log("Square Area:", square.area()); 





2) Write a javascript function find_largest to return the nth largest number

in an array-
eg- given an array of integers- [3,45,6,7,23,5,7,8]

find_largest(3) will return third largest number from the above array -
which is 8.

function find_largest(arr, n) {
  if (n > arr.length) {
    return "Invalid input: n is greater than the array length";
  }

  arr.sort((a, b) => b - a);

  return arr[n - 1];
}

const numbers = [3, 45, 6, 7, 23, 5, 7, 8];
const thirdLargest = find_largest(numbers, 3);
console.log(thirdLargest); // Output: 8






3) Write a JavaScript program which accept a number as input in the
function parameter and insert dashes (-) between each two even
numbers.
For example if you accept 025468 as the output should be 0-254-6-8.
computeDash(025468) -> 0-254-6-8.

function computeDash(number) {
  const numberStr = String(number);

  let result = "";

  for (let i = 0; i < numberStr.length; i++) {
    result += numberStr[i];

    if (i < numberStr.length - 1 && parseInt(numberStr[i]) % 2 === 0 && parseInt(numberStr[i + 1]) % 2 === 0) {
      result += "-";
    }
  }

  return result;
}

const inputNumber = 25468;
const result = computeDash(inputNumber);
console.log(result); 
