1. Write a JavaScript program to map Employee Records according to Employee
IDs.
Employee: { id, name, salary }
a) Print an array of all employee ids
b) Print count of employees
c) Print the name of the employee according to their id { key: value }
d) Store the salaries of all employees in an array
e) Calculate the average salary the company is paying to its employees
Sample Input:
"id": [ 67, 48, 29 ]
"name": [ "Hitanshu", “Ninad”, “Amandeep” ]
"salary": [ 75000, 82000, 98000 ]
Output:
[ 67, 48, 29 ]
3
67: Hitanshu
48: Ninad
29: Amandeep
[ 75000, 82000, 98000 ]
85000



const employeeData = {
  "id": [67, 48, 29],
  "name": ["Hitanshu", "Ninad", "Amandeep"],
  "salary": [75000, 82000, 98000]
};
const employeeIds = employeeData["id"];
console.log(employeeIds);
const employeeCount = employeeIds.length;
console.log(employeeCount);
for (let i = 0; i < employeeCount; i++) {
  const id = employeeIds[i];
  const name = employeeData["name"][i];
  console.log(`${id}: ${name}`);
}
const salaries = employeeData["salary"];
console.log(salaries);
const totalSalary = salaries.reduce((acc, salary) => acc + salary, 0);
const averageSalary = totalSalary / employeeCount;
console.log(averageSalary);









2. Write a program in JavaScript to map the student ids, names and scores.
a) Add data for 3 students (use map functions)
b) Get Student Names using map functions
c) Delete Student Scores using map functions

d) Display 1 parameter (only value), 2 parameters (value + key), and 3
parameters (value + key + map) for the student
Sample Input:
"id": [ 1, 2, 3 ]
"name": [ 'Hitanshu', 'Ninad', 'Amandeep' ]
"scores": [ 90, 88, 92 ]
Output:
[ 'Hitanshu', 'Ninad', 'Amandeep' ]
-----one parameter-----
[ 1, 2, 3 ]
[ 'Hitanshu', 'Ninad', 'Amandeep' ]
[ 90, 88, 92 ]
-----two parameter-----
id 1, 2, 3
name Hitanshu,Ninad,Amandeep
scores 90,88,92
-----three parameter-----
id 1, 2, 3
Map(3) {
'id' => [ 67, 48, 29 ],
'name' => [ 'Hitanshu', 'Ninad', 'Amandeep' ],
'scores' => [ 90, 88, 92 ]
}
name Hitanshu,Ninad,Amandeep
Map(3) {
'id' => [ 1, 2, 3 ],
'name' => [ 'Hitanshu', 'Ninad', 'Amandeep' ],
'scores' => [ 90, 88, 92 ]
}
scores 90,88,92
Map(3) {
'id' => [ 1, 2, 3 ],
'name' => [ 'Hitanshu', 'Ninad', 'Amandeep' ],
'scores' => [ 90, 88, 92 ]
}



const studentData = {
  "id": [1, 2, 3],
  "name": ["Hitanshu", "Ninad", "Amandeep"],
  "scores": [90, 88, 92]
};
const studentMap = new Map();
studentData.id.forEach((id, index) => {
  studentMap.set(id, {
    name: studentData.name[index],
    scores: studentData.scores[index]
  });
});
const studentNames = Array.from(studentMap.values(), student => student.name);
console.log(studentNames);
studentMap.forEach(student => delete student.scores);
console.log("-----one parameter-----");
console.log(studentNames);
console.log(Array.from(studentMap.keys()));
console.log(Array.from(studentMap.values()));
console.log(Array.from(studentMap.values(), student => student.scores));

console.log("-----two parameter-----");
console.log(Array.from(studentMap.keys()).join(', '));
console.log(Array.from(studentMap.values(), student => student.name).join(', '));
console.log(Array.from(studentMap.values(), student => student.scores).join(', '));

console.log("-----three parameter-----");
console.log(Array.from(studentMap.keys()).join(', '));
console.log(studentMap);
console.log(Array.from(studentMap.values(), student => student.name).join(', '));
console.log(studentMap);
console.log(Array.from(studentMap.values(), student => student.scores).join(', '));
console.log(studentMap);






3. Write a JavaScript program to iterate over an array inputted by the user using
mapping. Perform the square of all elements in the original array, store the
squares in a new array and make a mapping for the squares and display it.
Sample Input:
[ 1, 2, 3, 4, 5 ]
Explanation:
Original Array = [ 1, 2, 3, 4, 5 ]
New Array = [ 1, 4, 9, 16, 25 ]
Mapping = squares => [ 1, 4, 9, 16, 25 ]
Output:
[ 1, 4, 9, 16, 25 ]


function squareArray(inputArray) {
  return inputArray.map(element => element ** 2);
}
const inputString = prompt("Enter an array of numbers separated by commas (e.g., 1,2,3,4,5):");
const inputArray = inputString.split(",").map(Number);
if (!inputArray.some(isNaN)) {
  // Calculate the square of each element in the input array
  const squaredArray = squareArray(inputArray);
  console.log(squaredArray);
} else {
  console.log("Invalid input. Please enter an array of numbers separated by commas.");
}



